//归并排序
#include <iostream>
#include <numeric>
#include <vector>
#include <algorithm>
#include <stdio.h>
#include <string.h>
#include <sstream>
#include <iostream>
using namespace std;


void merge(int a[],int tmpA[],int l,int r,int mid)
{
    cout<<  " start merge...   "<<endl;
    int length=r-l+1;
    int i=l;
    int j=mid+1;
    int tmp=l;
 
    while(i<=mid &&j<=r )
    {
        if(a[i]<=a[j] ) tmpA[tmp++]=a[i++];
        else tmpA[tmp++]=a[j++];

    }
    while(i<=mid) tmpA[tmp++]=a[i++];
    while(j<=r) tmpA[tmp++]=a[j++];


        for(int i=0;i<length;i++,r-- )
        {
            a[r]=tmpA[r];
        }
        return;




}

void MergeSort(int a[],int tmpA[],int l ,int r)
{
    if(l>=r) return;

    int mid=(l+r)/2;


    MergeSort(a,tmpA,l,mid);
    MergeSort(a,tmpA,mid+1,r);
    merge(a,tmpA,l,r,mid);
}



void mergeSort(int s[], int l, int r)
{
    int *tmpA;
    tmpA=(int *)malloc(r*sizeof(int));
    MergeSort(s,tmpA,l,r-1);
}


int main()
{

    int a[]={2,6,9,8,5,3,4,7,6,7};
    int length=11;
    mergeSort(a,0,length);
    for(int i=0;i<11;i++) cout << a[i] <<" ";
    cout <<endl;

}
